% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Go_prediction.R
\name{Go_prediction}
\alias{Go_prediction}
\title{Go_prediction}
\arguments{
\item{psIN}{A \code{phyloseq} object.}

\item{project}{Character; project prefix used to create an output directory
\verb{<project_YYMMDD>/Randomforest} or \verb{<project_YYMMDD>/XGBoost}.}

\item{outcome}{Character; name of the binary outcome column in sample metadata.
Must contain levels specified in \code{orders}.}

\item{method}{Character; one of \code{c("randomforest","xgboost")}.}

\item{bacteriaSet}{Logical; include microbiome features (relative abundances
after filtering). If \code{FALSE}, only clinical features are used.}

\item{testSet}{Logical; if \code{FALSE} (default) runs CV-only. If \code{TRUE},
performs a 75/25 StudyID-aware holdout split with inner CV on the train set.}

\item{clinical_vari}{Character vector of metadata columns to include as
covariates (optional). Character/factor covariates are one-hot encoded,
NAs imputed by column median, then scaled.}

\item{StudyID_col}{Character; subject/group id column. If missing, rownames
are used. Default \code{"StudyID"}.}

\item{taxrank}{Either \code{"ASV"} to keep features as is, or a taxonomic rank
present in \code{tax_table(psIN)} (e.g., \code{"Genus"}). Default \code{"ASV"}.}

\item{prev_min}{Numeric in \(\link{0,1}\); minimum prevalence threshold (presence on
relative abundance). Default \code{0.01}.}

\item{relab_min}{Numeric; minimum mean relative abundance threshold. Default \code{1e-4}.}

\item{n_folds}{Integer; number of CV folds. Default \code{5}.}

\item{seed}{Integer; random seed. Default \code{123}.}

\item{n_candidates}{Integer; random search candidates. Default \code{40}.}

\item{num.trees}{Integer; RF trees / XGB max \code{nrounds} (early stopping used
for XGB). Default \code{1000}.}

\item{orders}{Character vector of length 2 giving outcome level order
(e.g., \code{c("Control","Case")}); positive class is \code{orders[2]}.}
}
\value{
(Invisibly) a list containing mode (\code{"CV-only"} or \code{"Holdout+CV"}),
metrics (AUC/AUPRC for OOF or Train/Test), \code{best_param}, and \code{outdir}.
}
\description{
Builds a binary classifier from a \code{phyloseq} object and (optionally)
clinical covariates. You can toggle inclusion of microbiome features via
\code{bacteriaSet}, choose the algorithm (\code{"randomforest"} or \code{"xgboost"}),
perform K-fold CV with subject-aware folds, run a random hyperparameter search,
and (optionally) evaluate a 75/25 holdout split. The function writes dated
output folders mirroring \code{Go_randomforest}/\code{Go_xgboost}.
}
\details{
Unified predictor for microbiome (+ optional clinical) using Random Forest
or XGBoost with StudyID-aware cross-validation/holdout, random search tuning,
and standardized outputs.

\strong{StudyID-aware CV:} When \code{StudyID_col} varies across rows,
folds keep samples from the same subject together and preserve class balance
at the group level when possible; otherwise, standard stratified CV is used.

\strong{Filtering:} If \code{bacteriaSet=TRUE}, taxa are kept if they pass
\code{prev_min} OR \code{relab_min}.

\strong{Tuning:} RF tunes \code{mtry}, \code{min.node.size}, \code{sample.fraction}.
XGB tunes \code{eta}, \code{max_depth}, \code{min_child_weight}, \code{subsample},
\code{colsample_bytree}, \code{gamma}, \code{lambda}, \code{alpha}, and
\code{early_stopping_rounds}.

\strong{Outputs (side effects):}
\itemize{
\item \code{random_search_results.csv}
\item \code{predictions.csv} (OOF for CV-only; Train/Test for holdout)
\item model + metadata: \code{rf_final_model.rds}/\code{xgb_final_model.rds},
\code{rf_meta.rds}/\code{xgb_meta.rds}
\item feature importance with direction (\code{importance_feature.csv}) and
aggregated by taxon (\code{importance_taxon.csv})
\item ROC/PR PNGs (OOF or Train/Test variants)
}
}
\examples{
\dontrun{
res <- Go_prediction(
  psIN = ps, project = "IBD", outcome = "Status",
  method = "randomforest", bacteriaSet = TRUE,
  clinical_vari = c("Age","BMI","Sex"),
  StudyID_col = "SubjectID", taxrank = "Genus",
  orders = c("Control","Case")
)
res$AUC
}

}
\seealso{
\code{\link{Go_randomforest}}, \code{\link{Go_xgboost}}
}
