% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Go_kmplot.R
\name{Go_kmplot}
\alias{Go_kmplot}
\title{Go_kmplot}
\usage{
Go_kmplot(
  df,
  project = "KMplot",
  event_col = "caselabel",
  time_col = "time",
  feature_col = "feature",
  name = NULL,
  event_positive = c("Case", "ACR", "Yes", "1"),
  n_group = 3,
  group_labels = NULL,
  height = 5,
  width = 6
)
}
\arguments{
\item{df}{A data.frame containing the columns named by \code{time_col},
\code{event_col}, and \code{feature_col}.}

\item{project}{Character; project prefix for output directory/file naming.
Default \code{"KMplot"}.}

\item{event_col}{Character; column name for the event indicator (numeric or
categorical). Numeric \code{>0} is treated as event. For non-numeric, any
value in \code{event_positive} is treated as event. Default \code{"caselabel"}.}

\item{time_col}{Character; column name for follow-up time (must be positive
and finite). Default \code{"time"}.}

\item{feature_col}{Character; column name of the continuous feature used to
define groups. Default \code{"feature"}.}

\item{name}{Optional character suffix to distinguish outputs (inserted before
the date in the PDF filename). Default \code{NULL}.}

\item{event_positive}{Character vector of labels that indicate an event when
\code{event_col} is non-numeric (case-insensitive). Default
\code{c("Case","ACR","Yes","1")}.}

\item{n_group}{Integer; number of quantile groups to form from \code{feature}.
Default \code{3}.}

\item{group_labels}{Optional character vector of length \code{n_group} to use
as group labels. If \code{NULL}, labels \code{"G1"}, \code{"G2"}, … are used.}

\item{height}{Numeric; PDF height (inches). Default \code{5}.}

\item{width}{Numeric; PDF width (inches). Default \code{6}.}
}
\value{
(Invisibly) a list with:
\itemize{
\item \code{fit}: a \code{survfit} object,
\item \code{data}: preprocessed data used for the fit,
\item \code{plot}: \code{ggsurvplot} return (list with \code{$plot}, etc.),
\item \code{pdf}: output PDF filepath,
\item \code{p_value}: log-rank p-value (numeric).
}
}
\description{
Given a data frame with time, event, and a continuous feature, this helper:
\itemize{
\item derives event status (1/0) from \code{event_col} using numeric values
or string matches to \code{event_positive},
\item bins the feature into \code{n_group} quantile groups (labels optional),
\item fits \code{survival::survfit} and computes a log-rank p-value,
\item draws a KM curve via \code{survminer::ggsurvplot} and saves a PDF to
\verb{<project_YYMMDD>/pdf/}.
}
}
\details{
Kaplan–Meier plot by quantile groups of a continuous feature, with log-rank p
and automatic dated output folders.

Groups are created with \code{ggplot2::cut_number} (equal-count bins) over the
non-missing \code{feature}. The log-rank p is computed from
\code{survival::survdiff}. The function always creates dated output folders:
\verb{<project>_<YYMMDD>/} and \verb{<project>_<YYMMDD>/pdf/}, then writes
\code{Kaplan.Meier.plot.<feature_col>.<project>.<name?>.<YYMMDD>.pdf}.
}
\examples{
\dontrun{
set.seed(1)
df <- data.frame(
  time = rexp(120, 1/200),
  caselabel = sample(c("Case","Control"), 120, replace=TRUE),
  feature = rnorm(120)
)
Go_kmplot(
  df,
  project = "DemoKM",
  event_col = "caselabel",
  time_col = "time",
  feature_col = "feature",
  n_group = 3,
  group_labels = c("Low","Mid","High"),
  name = "FeatureTertiles"
)
}

}
