% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Go_patternPlot_V1.R
\name{Go_patternPlot}
\alias{Go_patternPlot}
\title{Go_patternPlot}
\usage{
Go_patternPlot(
  df,
  project = "project",
  yinfor,
  fillinfor,
  StudyID,
  yinfor.order,
  mycols = NULL,
  width = 6,
  height = 15
)
}
\arguments{
\item{df}{A data.frame in long format containing at least the columns named
by \code{StudyID}, \code{yinfor}, and \code{fillinfor}.}

\item{project}{Character scalar used for output folder and file naming. Default \code{"project"}.}

\item{yinfor}{Character scalar. Column name (string) for the x-axis grouping (e.g., timepoint).}

\item{fillinfor}{Character scalar. Column name (string) used for point fill/legend.}

\item{StudyID}{Character scalar. Column name (string) for subject/sample ID.}

\item{yinfor.order}{Character vector giving the display/order of \code{yinfor} levels (left-to-right on the plot).}

\item{mycols}{Optional character vector of colors for levels of \code{fillinfor}.
If \code{NULL}, a default palette is used. Length must be \eqn{\ge} number of
unique non-NA levels in \code{fillinfor}.}

\item{width}{Numeric. PDF width in inches. Default \code{6}.}

\item{height}{Numeric. PDF height in inches. Default \code{15}.}
}
\value{
(Invisibly) a list with:
\itemize{
\item \code{plot}: the combined \code{patchwork} plot,
\item \code{pattern_table}: a data.frame with unique patterns and their counts,
\item \code{long_data}: the long-format pattern table used for plotting,
\item \code{file}: the output PDF filepath.
}
}
\description{
Given a long data frame with an ID, an x-axis variable (e.g., timepoint), and
a fill/legend variable (e.g., status), the function:
\itemize{
\item widens to one row per \code{StudyID} and one column per \code{yinfor},
\item collapses to unique patterns across \code{yinfor.order},
\item counts how many IDs share each pattern,
\item plots patterns (left) and counts (right) in a combined figure,
\item saves a PDF under \verb{<project>_<YYMMDD>/pdf/}.
}
}
\details{
Draw a “patient pattern” plot across ordered timepoints (or visits), showing
each unique pattern of observations and how many patients exhibit it.

The function creates dated output directories:
\verb{<project>_<YYMMDD>/pdf} and \verb{<project>_<YYMMDD>/table/dist}.
Missing values in \code{fillinfor} are labeled as \code{"NA"} and shown with a distinct
legend entry “No Sample” (shape 4). The right-hand bar chart shows how many
IDs share each pattern.
}
\section{Expected data format}{

\itemize{
\item \code{df[[StudyID]]}: identifier (character or factor).
\item \code{df[[yinfor]]}: categorical (must match \code{yinfor.order}).
\item \code{df[[fillinfor]]}: categorical (status/label per visit).
}
}

\examples{
\dontrun{
set.seed(1)
df <- data.frame(
  ID = rep(paste0("S", 1:8), each = 3),
  Visit = rep(c("V1","V2","V3"), times = 8),
  Status = sample(c("A","B", NA), size = 24, replace = TRUE),
  stringsAsFactors = FALSE
)

Go_patternPlot(
  df,
  project = "Demo",
  yinfor = "Visit",
  fillinfor = "Status",
  StudyID = "ID",
  yinfor.order = c("V1","V2","V3"),
  mycols = c(A = "#1f77b4", B = "#ff7f0e"),
  width = 7, height = 10
)
}

}
