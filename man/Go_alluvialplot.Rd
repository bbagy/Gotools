% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Go_alluvialplot_V2.R
\name{Go_alluvialplot}
\alias{Go_alluvialplot}
\title{Generate Alluvial Plots for Microbial Community Analysis}
\usage{
Go_alluvialplot(
  project,
  SigASVs,
  map,
  targets.bac,
  Addcolumn,
  outcome,
  column1 = NULL,
  column2 = NULL,
  orders,
  name = NULL,
  height = 2,
  width = 3,
  plotCols = 2,
  plotRows = 1
)
}
\arguments{
\item{project}{A string indicating the project name, used for directory and file naming.}

\item{SigASVs}{Either a file path to a CSV containing significant ASVs or a data frame.}

\item{map}{A file path to a CSV containing sample metadata or a data frame.}

\item{targets.bac}{A vector of target bacterial species for the plot.}

\item{Addcolumn}{A vector of additional columns from the metadata to be included in the plot.}

\item{outcome}{The primary outcome or variable of interest.}

\item{column1}{(Optional) An additional column for stratifying the data.}

\item{column2}{(Optional) Another column for further stratification.}

\item{orders}{The order of factors to arrange the plot.}

\item{name}{(Optional) A name for the plot for labeling purposes.}

\item{height}{Height of the output plot.}

\item{width}{Width of the output plot.}

\item{plotCols}{Number of columns in the plot layout.}

\item{plotRows}{Number of rows in the plot layout.}
}
\value{
Saves alluvial plots as PDF files in the specified project directory.
}
\description{
This function creates alluvial plots to visualize the associations between microbial species and
various experimental groups or conditions.
}
\details{
The function merges microbial data with sample metadata to create informative alluvial plots. It
allows for customizing the stratification and visualization of data based on specified microbial
targets and metadata columns.
}
\examples{
# Example usage:
Go_alluvialplot(project = "MyProject",
                SigASVs = "path_to_sig_ASVs.csv",
                map = "path_to_metadata.csv",
                targets.bac = c("Bacteroides_fragilis", "Escherichia_coli"),
                Addcolumn = c("Age", "Gender"),
                outcome = "TreatmentResponse",
                column1 = "Diet",
                column2 = "BMI",
                orders = c("Control", "Treatment"),
                name = "AlluvialAnalysis",
                height = 2, width = 3,
                plotCols = 2, plotRows = 1)

}
