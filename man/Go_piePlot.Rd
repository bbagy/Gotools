% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Go_piePlot_V1.R
\name{Go_piePlot}
\alias{Go_piePlot}
\title{Generate a Pie Plot PDF for a Given Project}
\usage{
Go_piePlot(
  df,
  project,
  pie1,
  pie2 = NULL,
  pie3 = NULL,
  orders,
  mycols = NULL,
  name = NULL,
  height,
  width
)
}
\arguments{
\item{df}{A data frame containing the variables to be plotted.}

\item{project}{A string specifying the project name, used for directory structuring and file naming.}

\item{pie1}{The name of the column in \code{df} to be used for the primary pie slices.}

\item{pie2}{The name of the column in \code{df} to be used for the secondary pie slices (optional).}

\item{pie3}{The name of the column in \code{df} containing the percentage values for the slices (optional).}

\item{mycols}{A vector of colors for the slices; if NULL, default colors are used.}

\item{name}{A string for the specific plot name; if NULL, a default name is used.}

\item{height}{The height of the plot in inches, used for the saved PDF file.}

\item{width}{The width of the plot in inches, used for the saved PDF file.}
}
\value{
No return value; the function is called for its side effects of creating a plot and saving a PDF.
}
\description{
This function generates a pie plot based on the provided data frame and plotting parameters for a specified project.
It allows for the creation of pie plots with up to three hierarchical levels and saves the plot in a structured project directory.
}
\details{
The function creates a directory for the project if it does not exist, and also a subdirectory for the PDF files.
It checks for user-provided colors (\code{mycols}) and handles cases where they are not properly defined.
The pie chart labels are determined based on the availability of \code{pie3} percentages.
The function prints the plot to the current graphics device and saves a PDF file to the project directory.
}
\examples{
Go_piePlot(df = df, project = "MyProject", pie1 = "Category", pie3 = "Percentage")
}
