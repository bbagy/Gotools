% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Go_sampleIDmerge_V1.R
\name{Go_sampleIDmerge}
\alias{Go_sampleIDmerge}
\title{Go_sampleIDmerge}
\usage{
Go_sampleIDmerge(psIN, map, mergeBy, project, name = NULL)
}
\arguments{
\item{psIN}{A Phyloseq object containing species count data, sample metadata, and optionally taxonomic data.}

\item{map}{Either a dataframe or a character string representing the path to a CSV file containing additional sample metadata to merge with the Phyloseq object.}

\item{mergeBy}{A character string specifying the column in the sample metadata by which to aggregate samples.}

\item{project}{A character string specifying the project name, used for file naming.}

\item{name}{An optional character string for additional naming in the output file.}
}
\value{
A Phyloseq object that has been merged and optionally aggregated by sample identifiers specified in the \code{mergeBy} parameter. The function also saves an RDS file of the merged Phyloseq object.
}
\description{
Merges a Phyloseq object with additional sample metadata and optionally aggregates samples based on a specified column.
}
\details{
The function first checks if the \code{map} parameter is a character string indicating a file path; if so, it reads the file into a dataframe. It then merges this metadata with the original Phyloseq object's sample data. After merging, the function can aggregate samples based on the specified \code{mergeBy} column. The resulting Phyloseq object, stripped of its original sample data, is saved as an RDS file in a specified directory.
}
\examples{
\dontrun{
# Assuming psIN is a Phyloseq object and map is either a dataframe or a path to a metadata CSV file
psIN <- globalPatterns
map <- "path/to/sample_metadata.csv"
result <- Go_sampleIDmerge(psIN, map, "StudyID", "ExampleProject")
print(result)
}
}
