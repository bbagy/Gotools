map <- data.frame(sample_data(ps))
#===== Orders
orders <- c("D0", "D3",  "D7", "D14", "D30", "PLACEBO", "16g INULIN", "32g INULIN","INULIN","Y","N")
StudyID <- unique(map$StudyID)
orders.all <- c(unique(sort(map$StudyID)), orders)
#===== ps set
ps2.sel <- subset_samples(ps, TreatmentGroup != "A");ps2.sel
ps.rare <- ps2.sel
ps.barchart <- ps2.sel
ps.adiv <- ps2.sel
ps.bdiv <- ps2.sel
ps.da <- ps2.sel
map <- data.frame(sample_data(ps2.sel))
#===== Go_myCols()
barplot.col <- Go_myCols(custumCols = "cols3");barplot.col
adiv.col <- Go_myCols(piratepal = "southpark")
bdiv.col <- Go_myCols(piratepal = "southpark")
da.col <- Go_myCols(piratepal = "espresso")
#===== alpha diversity
adiv.idx <- c("Chao1","Shannon")
adiv.var <- c("TreatmentGroup")
adiv.facet <- c("Timepoint")
VRE.subgroup <- c("Y","N")
adiv <- Go_adiv(psIN = ps2.sel,  project = project, alpha_metrics = c("Chao1","Shannon"));dim(adiv)
for (i in VRE.subgroup){
adiv.sel <- subset(adiv, VRE ==i)
Go_boxplot(df=adiv.sel, project = project, title = NULL, xangle = 90,  mycols = adiv.col,combination = NULL,
cate.vars = adiv.var, outcomes = adiv.idx,addnumber = F, cutoff = 0.5,statistics = T,parametric= F,
orders = orders, star= T, facet = adiv.facet, name = i,
height = 3, width = 10, plotCols=2, plotRows=1, standardsize = T)
}
for (i in VRE.subgroup){
adiv.sel <- subset(adiv, VRE ==i)
Go_boxplot(df=adiv.sel, project = project, title = NULL, xangle = 90,  mycols = adiv.col,combination = NULL,
cate.vars = adiv.var, outcomes = adiv.idx,addnumber = F, cutoff = 0.5,statistics = T,parametric= F,
orders = orders, star= F, facet = adiv.facet, name = i,
height = 3, width = 10, plotCols=2, plotRows=1, standardsize = T)
}
#===== alpha diversity
adiv.idx <- c("Chao1","Shannon")
adiv.var <- c("TreatmentGroup")
adiv.facet <- c("Timepoint")
VRE.subgroup <- c("Y","N")
adiv <- Go_adiv(psIN = ps2.sel,  project = project, alpha_metrics = c("Chao1","Shannon"));dim(adiv)
for (i in VRE.subgroup){
adiv.sel <- subset(adiv, VRE ==i)
Go_boxplot(df=adiv.sel, project = project, title = NULL, xangle = 90,  mycols = adiv.col,combination = NULL,
cate.vars = adiv.var, outcomes = adiv.idx,addnumber = F, cutoff = 0.5,statistics = T,parametric= F,
orders = orders, star= F, facet = adiv.facet, name = i,
height = 3, width = 10, plotCols=2, plotRows=1, standardsize = T)
}
for (i in VRE.subgroup){
adiv.sel <- subset(adiv, VRE ==i)
Go_boxplot(df=adiv.sel, project = project, title = sprintf("VRE_%s",i), xangle = 90, cutoff = 0.5, mycols = adiv.col,
cate.vars = adiv.var, outcomes = adiv.idx, orders = orders,  facet = adiv.facet, name = i,
addnumber = F, statistics = T,parametric= F,combination = NULL,star= F,ncol=NULL, ylim =NULL,
height = 3, width = 10, plotCols=2, plotRows=1, standardsize = T)
}
for (i in VRE.subgroup){
adiv.sel <- subset(adiv, VRE ==i)
Go_boxplot(df=adiv.sel, project = project, title = sprintf("VRE_%s",i), xangle = 90, cutoff = 0.5, mycols = adiv.col,
cate.vars = adiv.var, outcomes = adiv.idx, orders = orders,  facet = adiv.facet, name = i,
addnumber = F, statistics = T,parametric= F,combination = NULL,star= F,ncol=NULL, ylim =NULL,
height = 4, width = 10, plotCols=2, plotRows=1, standardsize = T)
}
Go_expInfo <- function(kit_number, prep_number, spikein_number) {
# Define the kit based on kit_number
if (kit_number == 1) {
kit <- "ZymoBIOMICS 96 MagBead DNA/RNA Kit (Catalog# D4300)"
} else if (kit_number == 2) {
kit <- "DNeasy® 96 PowerSoil® Pro QIAcube® HT Kit (Catalog# 47021)"
} else if (kit_number == 3) {
kit <- "QIAamp® 96 Virus QIAcube® HT (Catalog# 57731)"
} else if (kit_number == 4) {
kit <- "QIAamp® 96 DNA QIAcube® HT (Catalog# 51331)"
} else if (kit_number == 5) {
kit <- "ZymoBIOMICS DNA Miniprep Kit (Catalog# R2002)"
} else if (kit_number == 6) {
kit <- "DNeasy PowerSoil Pro Kit (Catalog# 47016)"
} else if (kit_number == 7) {
kit <- "DNeasy DNA and Blood kit (Catalog# 69506)"
} else {
kit <- "Unknown kit"
}
# Define the prep based on prep_number
if (prep_number == 1) {
prep <- "Illumina V3V4"
} else if (prep_number == 2) {
prep <- "Illumina V1V2"
} else if (prep_number == 3) {
prep <- "Zymo Quick-16S/ V3V4 Plus NGS Library prep kit (#catalog D6420)"
} else {
prep <- "Unknown prep"
}
# Define the spikein based on spikein_number
if (spikein_number == 1) {
spikein <- "/ ZymoBIOMICSTM Spike-in Control II (Low Microbial Load) (D6321)"
} else if (spikein_number == 2) {
spikein <- "No Spike-in Control"
} else {
spikein <- "Unknown Spike-in"
}
# Print the experiment information
cat("Experiment Information:\n")
cat("Kit: ", kit, "\n")
cat("Prep: ", prep, "\n")
cat("Spike-in: ", spikein, "\n\n")
}
# Example usage:
Go_expInfo(kit_number = 6, prep_number = 1, spikein_number = 2)
Go_expInfo()
Go_expInfo <- function(kit_number, prep_number, spikein_number) {
# Define the kit based on kit_number
kit <- switch(kit_number,
"1" = "ZymoBIOMICS 96 MagBead DNA/RNA Kit (Catalog# D4300)",
"2" = "DNeasy® 96 PowerSoil® Pro QIAcube® HT Kit (Catalog# 47021)",
"3" = "QIAamp® 96 Virus QIAcube® HT (Catalog# 57731)",
"4" = "QIAamp® 96 DNA QIAcube® HT (Catalog# 51331)",
"5" = "ZymoBIOMICS DNA Miniprep Kit (Catalog# R2002)",
"6" = "DNeasy PowerSoil Pro Kit (Catalog# 47016)",
"7" = "DNeasy DNA and Blood kit (Catalog# 69506)",
"Unknown kit")
# Define the prep based on prep_number
prep <- switch(prep_number,
"1" = "Illumina V3V4",
"2" = "Illumina V1V2",
"3" = "Zymo Quick-16S/ V3V4 Plus NGS Library prep kit (#catalog D6420)",
"Unknown prep")
# Define the spikein based on spikein_number
spikein <- switch(spikein_number,
"1" = "/ ZymoBIOMICSTM Spike-in Control II (Low Microbial Load) (D6321)",
"2" = NULL,  # Representing no spike-in control
"Unknown Spike-in")
# Print the experiment information in variable assignment format
cat("kit_number <- \"", kit, "\"\n", sep="")
cat("prep_number <- \"", prep, "\"\n", sep="")
if (!is.null(spikein)) {
cat("spikein_number <- \"", spikein, "\"\n", sep="")
} else {
cat("spikein_number <- NULL\n")
}
}
# Example usage:
Go_expInfo(kit_number = 6, prep_number = 1, spikein_number = 2)
kit_number
Go_expInfo()
Go_expInfo <- function(kit_number, prep_number, spikein_number) {
# Define the kit based on kit_number
kit <- switch(as.character(kit_number),
"1" = "ZymoBIOMICS 96 MagBead DNA/RNA Kit (Catalog# D4300)",
"2" = "DNeasy® 96 PowerSoil® Pro QIAcube® HT Kit (Catalog# 47021)",
"3" = "QIAamp® 96 Virus QIAcube® HT (Catalog# 57731)",
"4" = "QIAamp® 96 DNA QIAcube® HT (Catalog# 51331)",
"5" = "ZymoBIOMICS DNA Miniprep Kit (Catalog# R2002)",
"6" = "DNeasy PowerSoil Pro Kit (Catalog# 47016)",
"7" = "DNeasy DNA and Blood kit (Catalog# 69506)",
"Unknown kit")
# Define the prep based on prep_number
prep <- switch(as.character(prep_number),
"1" = "Illumina V3V4",
"2" = "Illumina V1V2",
"3" = "Zymo Quick-16S/ V3V4 Plus NGS Library prep kit (#catalog D6420)",
"Unknown prep")
# Define the spikein based on spikein_number
spikein <- switch(as.character(spikein_number),
"1" = "/ ZymoBIOMICSTM Spike-in Control II (Low Microbial Load) (D6321)",
"2" = NULL,  # Representing no spike-in control
"Unknown Spike-in")
# Return a list containing the selected options
return(list(kit = kit, prep = prep, spikein = spikein))
}
# Example usage:
exp_info <- Go_expInfo(kit_number = "6", prep_number = "1", spikein_number = "2")
# Access and use the values
kit_number <- exp_info$kit
prep_number <- exp_info$prep
spikein_number <- exp_info$spikein
# Print to check
cat("Kit number:", kit_number, "\n")
cat("Prep number:", prep_number, "\n")
cat("Spike-in number:", ifelse(is.null(spikein_number), "NULL", spikein_number), "\n")
kit_number
exp_info$kit
kit_number
exp_info$kit
Go_expInfo <- function(kit_number = NA, prep_number = NA, spikein_number = NA) {
# Check if all arguments are missing and print options if they are
if (is.na(kit_number) && is.na(prep_number) && is.na(spikein_number)) {
cat("Available kit numbers and their descriptions:\n",
"1: ZymoBIOMICS 96 MagBead DNA/RNA Kit (Catalog# D4300)\n",
"2: DNeasy® 96 PowerSoil® Pro QIAcube® HT Kit (Catalog# 47021)\n",
"3: QIAamp® 96 Virus QIAcube® HT (Catalog# 57731)\n",
"4: QIAamp® 96 DNA QIAcube® HT (Catalog# 51331)\n",
"5: ZymoBIOMICS DNA Miniprep Kit (Catalog# R2002)\n",
"6: DNeasy PowerSoil Pro Kit (Catalog# 47016)\n",
"7: DNeasy DNA and Blood kit (Catalog# 69506)\n\n",
"Available prep numbers and their descriptions:\n",
"1: Illumina V3V4\n",
"2: Illumina V1V2\n",
"3: Zymo Quick-16S/ V3V4 Plus NGS Library prep kit (#catalog D6420)\n\n",
"Available spike-in numbers and their descriptions:\n",
"1: / ZymoBIOMICSTM Spike-in Control II (Low Microbial Load) (D6321)\n",
"2: No Spike-in Control\n")
return(invisible())
}
# The rest of your function here...
# This is the place where you define the kit, prep, and spikein based on the provided numbers.
# Example continuation of the function...
# Return a list containing the selected options
return(list(kit = "Example Kit", prep = "Example Prep", spikein = "Example Spike-in"))
}
# Test the function without arguments to display the options
Go_expInfo()
# Example usage:
exp_info <- Go_expInfo(kit_number = "6", prep_number = "1", spikein_number = "2")
# Access and use the values
kit_number <- exp_info$kit
prep_number <- exp_info$prep
spikein_number <- exp_info$spikein
# Print to check
cat("Kit number:", kit_number, "\n")
cat("Prep number:", prep_number, "\n")
cat("Spike-in number:", ifelse(is.null(spikein_number), "NULL", spikein_number), "\n")
Go_expInfo <- function(kit_number, prep_number, spikein_number) {
# Define the kit based on kit_number
kit <- switch(as.character(kit_number),
"1" = "ZymoBIOMICS 96 MagBead DNA/RNA Kit (Catalog# D4300)",
"2" = "DNeasy® 96 PowerSoil® Pro QIAcube® HT Kit (Catalog# 47021)",
"3" = "QIAamp® 96 Virus QIAcube® HT (Catalog# 57731)",
"4" = "QIAamp® 96 DNA QIAcube® HT (Catalog# 51331)",
"5" = "ZymoBIOMICS DNA Miniprep Kit (Catalog# R2002)",
"6" = "DNeasy PowerSoil Pro Kit (Catalog# 47016)",
"7" = "DNeasy DNA and Blood kit (Catalog# 69506)",
"Unknown kit")
# Define the prep based on prep_number
prep <- switch(as.character(prep_number),
"1" = "Illumina V3V4",
"2" = "Illumina V1V2",
"3" = "Zymo Quick-16S/ V3V4 Plus NGS Library prep kit (#catalog D6420)",
"Unknown prep")
# Define the spikein based on spikein_number
spikein <- switch(as.character(spikein_number),
"1" = "/ ZymoBIOMICSTM Spike-in Control II (Low Microbial Load) (D6321)",
"2" = NULL,  # Representing no spike-in control
"Unknown Spike-in")
# Return a list containing the selected options
return(list(kit = kit, prep = prep, spikein = spikein))
}
Go_expInfo <- function(kit_number = NA, prep_number = NA, spikein_number = NA) {
# Check if all arguments are missing and print options if they are
if (is.na(kit_number) && is.na(prep_number) && is.na(spikein_number)) {
cat("Available kit numbers and their descriptions:\n",
"1: ZymoBIOMICS 96 MagBead DNA/RNA Kit (Catalog# D4300)\n",
"2: DNeasy® 96 PowerSoil® Pro QIAcube® HT Kit (Catalog# 47021)\n",
"3: QIAamp® 96 Virus QIAcube® HT (Catalog# 57731)\n",
"4: QIAamp® 96 DNA QIAcube® HT (Catalog# 51331)\n",
"5: ZymoBIOMICS DNA Miniprep Kit (Catalog# R2002)\n",
"6: DNeasy PowerSoil Pro Kit (Catalog# 47016)\n",
"7: DNeasy DNA and Blood kit (Catalog# 69506)\n\n",
"Available prep numbers and their descriptions:\n",
"1: Illumina V3V4\n",
"2: Illumina V1V2\n",
"3: Zymo Quick-16S/ V3V4 Plus NGS Library prep kit (#catalog D6420)\n\n",
"Available spike-in numbers and their descriptions:\n",
"1: / ZymoBIOMICSTM Spike-in Control II (Low Microbial Load) (D6321)\n",
"2: No Spike-in Control\n")
return(invisible())
}
# Define the kit based on kit_number
kit <- switch(as.character(kit_number),
"1" = "ZymoBIOMICS 96 MagBead DNA/RNA Kit (Catalog# D4300)",
"2" = "DNeasy® 96 PowerSoil® Pro QIAcube® HT Kit (Catalog# 47021)",
"3" = "QIAamp® 96 Virus QIAcube® HT (Catalog# 57731)",
"4" = "QIAamp® 96 DNA QIAcube® HT (Catalog# 51331)",
"5" = "ZymoBIOMICS DNA Miniprep Kit (Catalog# R2002)",
"6" = "DNeasy PowerSoil Pro Kit (Catalog# 47016)",
"7" = "DNeasy DNA and Blood kit (Catalog# 69506)",
"Unknown kit")
# Define the prep based on prep_number
prep <- switch(as.character(prep_number),
"1" = "Illumina V3V4",
"2" = "Illumina V1V2",
"3" = "Zymo Quick-16S/ V3V4 Plus NGS Library prep kit (#catalog D6420)",
"Unknown prep")
# Define the spikein based on spikein_number
spikein <- switch(as.character(spikein_number),
"1" = "/ ZymoBIOMICSTM Spike-in Control II (Low Microbial Load) (D6321)",
"2" = NULL,  # Representing no spike-in control
"Unknown Spike-in")
# Return a list containing the selected options
return(list(kit = kit, prep = prep, spikein = spikein))
}
# Test the function without arguments to display the options
Go_expInfo()
# Test the function without arguments to display the options
Go_expInfo()
# Example usage:
exp_info <- Go_expInfo(kit_number = "6", prep_number = "1", spikein_number = "2")
exp_info$kit
Go_expInfo(kit_number = "6", prep_number = "1", spikein_number = "2")
# Example usage:
exp_info <- Go_expInfo(kit_number = "6", prep_number = "1", spikein_number = "2");exp_info
# Example usage:
exp_info <- Go_expInfo(kit_number = "6", prep_number = "1", spikein_number = "2");exp_info
# Access and use the values
kit_number <- exp_info$kit
prep_number <- exp_info$prep
spikein_number <- exp_info$spikein
# Print to check
cat("Kit number:", kit_number, "\n")
cat("Prep number:", prep_number, "\n")
cat("Spike-in number:", ifelse(is.null(spikein_number), "NULL", spikein_number), "\n")
setwd("~/Dropbox/04_Scripts/R_source/Gotools")
devtools::build()
devtools::document()
setwd("~/Dropbox/04_Scripts/R_source/Gotools")
devtools::build()
devtools::document()
devtools::install_github("bbagy/Gotools", force=T)
#===== Read Go_tools
# devtools::install_github("bbagy/Gotools", force=T)
library("Gotools")
Gotool_dependency()
Go_expInfo()
Go_expInfo(kit_number = 6,prep_number = 1,spikein_number = 2)
expInfo <- Go_expInfo(kit_number = 6,prep_number = 1,spikein_number = 2)
expInfo$kit
Go_expInfo <- function(kit_number = NA, prep_number = NA, spikein_number = NA) {
# Check if all arguments are missing and print options if they are
if (is.na(kit_number) && is.na(prep_number) && is.na(spikein_number)) {
cat("Available kit numbers and their descriptions:\n",
"1: ZymoBIOMICS 96 MagBead DNA/RNA Kit (Catalog# D4300)\n",
"2: DNeasy® 96 PowerSoil® Pro QIAcube® HT Kit (Catalog# 47021)\n",
"3: QIAamp® 96 Virus QIAcube® HT (Catalog# 57731)\n",
"4: QIAamp® 96 DNA QIAcube® HT (Catalog# 51331)\n",
"5: ZymoBIOMICS DNA Miniprep Kit (Catalog# R2002)\n",
"6: DNeasy PowerSoil Pro Kit (Catalog# 47016)\n",
"7: DNeasy DNA and Blood kit (Catalog# 69506)\n\n",
"Available prep numbers and their descriptions:\n",
"1: Illumina V3V4\n",
"2: Illumina V1V2\n",
"3: Zymo Quick-16S/ V3V4 Plus NGS Library prep kit (#catalog D6420)\n\n",
"Available spike-in numbers and their descriptions:\n",
"1: / ZymoBIOMICSTM Spike-in Control II (Low Microbial Load) (D6321)\n",
"2: No Spike-in Control\n"
"Available Technicians and email address:\n",
Go_expInfo <- function(kit_number = NA, prep_number = NA, spikein_number = NA) {
# Check if all arguments are missing and print options if they are
if (is.na(kit_number) && is.na(prep_number) && is.na(spikein_number)) {
cat("Available kit numbers and their descriptions:\n",
"1: ZymoBIOMICS 96 MagBead DNA/RNA Kit (Catalog# D4300)\n",
"2: DNeasy® 96 PowerSoil® Pro QIAcube® HT Kit (Catalog# 47021)\n",
"3: QIAamp® 96 Virus QIAcube® HT (Catalog# 57731)\n",
"4: QIAamp® 96 DNA QIAcube® HT (Catalog# 51331)\n",
"5: ZymoBIOMICS DNA Miniprep Kit (Catalog# R2002)\n",
"6: DNeasy PowerSoil Pro Kit (Catalog# 47016)\n",
"7: DNeasy DNA and Blood kit (Catalog# 69506)\n\n",
"Available prep numbers and their descriptions:\n",
"1: Illumina V3V4\n",
"2: Illumina V1V2\n",
"3: Zymo Quick-16S/ V3V4 Plus NGS Library prep kit (#catalog D6420)\n\n",
"Available spike-in numbers and their descriptions:\n",
"1: / ZymoBIOMICSTM Spike-in Control II (Low Microbial Load) (D6321)\n",
"2: No Spike-in Control\n",
"Available Technicians and email address:\n",
"Sofia Moscovitz : szm2110@cumc.columbia.edu"
"Dalia Moallem : dhm2127@cumc.columbia.edu\n"
Go_expInfo <- function(kit_number = NA, prep_number = NA, spikein_number = NA) {
# Check if all arguments are missing and print options if they are
if (is.na(kit_number) && is.na(prep_number) && is.na(spikein_number)) {
cat("Available kit numbers and their descriptions:\n",
"1: ZymoBIOMICS 96 MagBead DNA/RNA Kit (Catalog# D4300)\n",
"2: DNeasy® 96 PowerSoil® Pro QIAcube® HT Kit (Catalog# 47021)\n",
"3: QIAamp® 96 Virus QIAcube® HT (Catalog# 57731)\n",
"4: QIAamp® 96 DNA QIAcube® HT (Catalog# 51331)\n",
"5: ZymoBIOMICS DNA Miniprep Kit (Catalog# R2002)\n",
"6: DNeasy PowerSoil Pro Kit (Catalog# 47016)\n",
"7: DNeasy DNA and Blood kit (Catalog# 69506)\n\n",
"Available prep numbers and their descriptions:\n",
"1: Illumina V3V4\n",
"2: Illumina V1V2\n",
"3: Zymo Quick-16S/ V3V4 Plus NGS Library prep kit (#catalog D6420)\n\n",
"Available spike-in numbers and their descriptions:\n",
"1: / ZymoBIOMICSTM Spike-in Control II (Low Microbial Load) (D6321)\n",
"2: No Spike-in Control\n",
"Available Technicians and email address:\n",
"Sofia Moscovitz : szm2110@cumc.columbia.edu\n",
"Dalia Moallem : dhm2127@cumc.columbia.edu\n"
"Dwayne Seeram : ds4057@cumc.columbia.edu\n"
Go_expInfo <- function(kit_number = NA, prep_number = NA, spikein_number = NA) {
# Check if all arguments are missing and print options if they are
if (is.na(kit_number) && is.na(prep_number) && is.na(spikein_number)) {
cat("Available kit numbers and their descriptions:\n",
"1: ZymoBIOMICS 96 MagBead DNA/RNA Kit (Catalog# D4300)\n",
"2: DNeasy® 96 PowerSoil® Pro QIAcube® HT Kit (Catalog# 47021)\n",
"3: QIAamp® 96 Virus QIAcube® HT (Catalog# 57731)\n",
"4: QIAamp® 96 DNA QIAcube® HT (Catalog# 51331)\n",
"5: ZymoBIOMICS DNA Miniprep Kit (Catalog# R2002)\n",
"6: DNeasy PowerSoil Pro Kit (Catalog# 47016)\n",
"7: DNeasy DNA and Blood kit (Catalog# 69506)\n\n",
"Available prep numbers and their descriptions:\n",
"1: Illumina V3V4\n",
"2: Illumina V1V2\n",
"3: Zymo Quick-16S/ V3V4 Plus NGS Library prep kit (#catalog D6420)\n\n",
"Available spike-in numbers and their descriptions:\n",
"1: / ZymoBIOMICSTM Spike-in Control II (Low Microbial Load) (D6321)\n",
"2: No Spike-in Control\n",
"Available Technicians and email address:\n",
"Sofia Moscovitz : szm2110@cumc.columbia.edu\n",
"Dalia Moallem : dhm2127@cumc.columbia.edu\n",
"Dwayne Seeram : ds4057@cumc.columbia.edu\n",
"Kristen Lewis : kl2954@cumc.columbia.edu\n")
return(invisible())
}
# Define the kit based on kit_number
kit <- switch(as.character(kit_number),
"1" = "ZymoBIOMICS 96 MagBead DNA/RNA Kit (Catalog# D4300)",
"2" = "DNeasy® 96 PowerSoil® Pro QIAcube® HT Kit (Catalog# 47021)",
"3" = "QIAamp® 96 Virus QIAcube® HT (Catalog# 57731)",
"4" = "QIAamp® 96 DNA QIAcube® HT (Catalog# 51331)",
"5" = "ZymoBIOMICS DNA Miniprep Kit (Catalog# R2002)",
"6" = "DNeasy PowerSoil Pro Kit (Catalog# 47016)",
"7" = "DNeasy DNA and Blood kit (Catalog# 69506)",
"Unknown kit")
# Define the prep based on prep_number
prep <- switch(as.character(prep_number),
"1" = "Illumina V3V4",
"2" = "Illumina V1V2",
"3" = "Zymo Quick-16S/ V3V4 Plus NGS Library prep kit (#catalog D6420)",
"Unknown prep")
# Define the spikein based on spikein_number
spikein <- switch(as.character(spikein_number),
"1" = "/ ZymoBIOMICSTM Spike-in Control II (Low Microbial Load) (D6321)",
"2" = NULL,  # Representing no spike-in control
"Unknown Spike-in")
# Return a list containing the selected options
return(list(kit = kit, prep = prep, spikein = spikein))
}
Go_expInfo()
Go_expInfo <- function(kit_number = NA, prep_number = NA, spikein_number = NA) {
# Check if all arguments are missing and print options if they are
if (is.na(kit_number) && is.na(prep_number) && is.na(spikein_number)) {
cat("Available kit numbers and their descriptions:\n",
"1: ZymoBIOMICS 96 MagBead DNA/RNA Kit (Catalog# D4300)\n",
"2: DNeasy® 96 PowerSoil® Pro QIAcube® HT Kit (Catalog# 47021)\n",
"3: QIAamp® 96 Virus QIAcube® HT (Catalog# 57731)\n",
"4: QIAamp® 96 DNA QIAcube® HT (Catalog# 51331)\n",
"5: ZymoBIOMICS DNA Miniprep Kit (Catalog# R2002)\n",
"6: DNeasy PowerSoil Pro Kit (Catalog# 47016)\n",
"7: DNeasy DNA and Blood kit (Catalog# 69506)\n\n",
"Available prep numbers and their descriptions:\n",
"1: Illumina V3V4\n",
"2: Illumina V1V2\n",
"3: Zymo Quick-16S/ V3V4 Plus NGS Library prep kit (#catalog D6420)\n\n",
"Available spike-in numbers and their descriptions:\n",
"1: / ZymoBIOMICSTM Spike-in Control II (Low Microbial Load) (D6321)\n",
"2: No Spike-in Control\n\n",
"Available Technicians and email address:\n",
"Sofia Moscovitz : szm2110@cumc.columbia.edu\n",
"Dalia Moallem : dhm2127@cumc.columbia.edu\n",
"Dwayne Seeram : ds4057@cumc.columbia.edu\n",
"Kristen Lewis : kl2954@cumc.columbia.edu\n")
return(invisible())
}
# Define the kit based on kit_number
kit <- switch(as.character(kit_number),
"1" = "ZymoBIOMICS 96 MagBead DNA/RNA Kit (Catalog# D4300)",
"2" = "DNeasy® 96 PowerSoil® Pro QIAcube® HT Kit (Catalog# 47021)",
"3" = "QIAamp® 96 Virus QIAcube® HT (Catalog# 57731)",
"4" = "QIAamp® 96 DNA QIAcube® HT (Catalog# 51331)",
"5" = "ZymoBIOMICS DNA Miniprep Kit (Catalog# R2002)",
"6" = "DNeasy PowerSoil Pro Kit (Catalog# 47016)",
"7" = "DNeasy DNA and Blood kit (Catalog# 69506)",
"Unknown kit")
# Define the prep based on prep_number
prep <- switch(as.character(prep_number),
"1" = "Illumina V3V4",
"2" = "Illumina V1V2",
"3" = "Zymo Quick-16S/ V3V4 Plus NGS Library prep kit (#catalog D6420)",
"Unknown prep")
# Define the spikein based on spikein_number
spikein <- switch(as.character(spikein_number),
"1" = "/ ZymoBIOMICSTM Spike-in Control II (Low Microbial Load) (D6321)",
"2" = NULL,  # Representing no spike-in control
"Unknown Spike-in")
# Return a list containing the selected options
return(list(kit = kit, prep = prep, spikein = spikein))
}
expInfo <- Go_expInfo(kit_number = 6,prep_number = 1,spikein_number = 2)
Go_expInfo()
devtools::install_github("bbagy/Gotools", force=T)
#===== Read Go_tools
# devtools::install_github("bbagy/Gotools", force=T)
library("Gotools")
Gotool_dependency()
project_name <- "Prebiotic (Inuline) 16S microbiome – Dr. Daniel Freedberg"
samples <- "344 (94 Participants)"
Sequencing.date <- "12/28/2023"
platform <- "Illumina MiSeq 2x300"
contact_email <- "hp2523@cumc.columbia.edu"
expInfo <- Go_expInfo(kit_number = 6,prep_number = 1,spikein_number = 2)
Go_expInfo()
#===== Read Go_tools
# devtools::install_github("bbagy/Gotools", force=T)
library("Gotools")
Gotool_dependency()
project_name <- "Prebiotic (Inuline) 16S microbiome – Dr. Daniel Freedberg"
samples <- "344 (94 Participants)"
Sequencing.date <- "12/28/2023"
platform <- "Illumina MiSeq 2x300"
contact_email <- "hp2523@cumc.columbia.edu"
expInfo <- Go_expInfo(kit_number = 6,prep_number = 1, spikein_number = 2)
